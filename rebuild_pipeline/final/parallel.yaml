#!/bin/bash
set -euo pipefail

INPUT_FILE="data/workspaces.csv"
BASELINE_LOG="data/baseline_status.csv"
PARALLEL_JOBS=3

mkdir -p logs
echo "workspaceid,username,ip,status,message" > "$BASELINE_LOG"

run_single() {
  local WORKSPACE_ID=$1
  local USERNAME=$2

  IP=$(aws workspaces describe-workspaces --workspace-ids "$WORKSPACE_ID" \
       --query 'Workspaces[0].IpAddress' --output text 2>/dev/null)

  if [[ -z "$IP" || "$IP" == "None" ]]; then
    echo "$WORKSPACE_ID,$USERNAME,,FAILED,No IP found" >> "$BASELINE_LOG"
    return
  fi

  echo "Running baseline on $WORKSPACE_ID ($USERNAME) - $IP"

  LOG_FILE="logs/${WORKSPACE_ID}_${USERNAME}.log"

  if OUTPUT=$(./run_user.sh -i "wsansible@$IP" -t -v fcs 2>&1 | tee "$LOG_FILE"); then
    echo "$WORKSPACE_ID,$USERNAME,$IP,SUCCESS,Baseline completed" >> "$BASELINE_LOG"
  else
    echo "$WORKSPACE_ID,$USERNAME,$IP,FAILED,\"$(tail -n 10 "$LOG_FILE" | tr -d '\r\n')\"" >> "$BASELINE_LOG"
  fi

  # Handle Google Chrome after baseline run

  # Check if google-chrome installed
  if ! command -v google-chrome >/dev/null 2>&1; then
    echo "google-chrome not found, installing..."
    sudo apt-get update && sudo apt-get install -y google-chrome-stable
  fi

  # Kill all google-chrome processes if running
  pkill -f google-chrome || true

  # Remove Singleton* files in user's chrome config
  rm -rf /home/"$USERNAME"/.config/google-chrome/Singleton*
}

export -f run_single
export BASELINE_LOG

tail -n +2 "$INPUT_FILE" | grep -v '^$' | \
  parallel -j $PARALLEL_JOBS --colsep ',' run_single {1} {2}
